// Generated by Dagger (https://dagger.dev).
package ru.project.di;

import androidx.lifecycle.MutableLiveData;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ru.project.viewmodels.MainState;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideMainStateLiveDataFactory implements Factory<MutableLiveData<MainState>> {
  private final AppModule module;

  public AppModule_ProvideMainStateLiveDataFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public MutableLiveData<MainState> get() {
    return provideMainStateLiveData(module);
  }

  public static AppModule_ProvideMainStateLiveDataFactory create(AppModule module) {
    return new AppModule_ProvideMainStateLiveDataFactory(module);
  }

  public static MutableLiveData<MainState> provideMainStateLiveData(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideMainStateLiveData());
  }
}
