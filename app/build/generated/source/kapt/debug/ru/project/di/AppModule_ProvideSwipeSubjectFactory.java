// Generated by Dagger (https://dagger.dev).
package ru.project.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.reactivex.subjects.PublishSubject;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideSwipeSubjectFactory implements Factory<PublishSubject<Boolean>> {
  private final AppModule module;

  public AppModule_ProvideSwipeSubjectFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public PublishSubject<Boolean> get() {
    return provideSwipeSubject(module);
  }

  public static AppModule_ProvideSwipeSubjectFactory create(AppModule module) {
    return new AppModule_ProvideSwipeSubjectFactory(module);
  }

  public static PublishSubject<Boolean> provideSwipeSubject(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideSwipeSubject());
  }
}
