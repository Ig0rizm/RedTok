// Generated by Dagger (https://dagger.dev).
package ru.project.viewmodels;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import ru.project.data.models.PostService;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FeedViewModel_MembersInjector implements MembersInjector<FeedViewModel> {
  private final Provider<PostService> postServiceProvider;

  public FeedViewModel_MembersInjector(Provider<PostService> postServiceProvider) {
    this.postServiceProvider = postServiceProvider;
  }

  public static MembersInjector<FeedViewModel> create(Provider<PostService> postServiceProvider) {
    return new FeedViewModel_MembersInjector(postServiceProvider);
  }

  @Override
  public void injectMembers(FeedViewModel instance) {
    injectPostService(instance, postServiceProvider.get());
  }

  @InjectedFieldSignature("ru.project.viewmodels.FeedViewModel.postService")
  public static void injectPostService(FeedViewModel instance, PostService postService) {
    instance.postService = postService;
  }
}
